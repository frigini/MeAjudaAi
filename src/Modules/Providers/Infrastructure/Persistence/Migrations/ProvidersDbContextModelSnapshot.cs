// <auto-generated />
using System;
using MeAjudaAi.Modules.Providers.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MeAjudaAi.Modules.Providers.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ProvidersDbContext))]
    partial class ProvidersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("providers")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MeAjudaAi.Modules.Providers.Domain.Entities.Provider", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("deleted_at");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<string>("VerificationStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("verification_status");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("ix_providers_is_deleted");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_providers_name");

                    b.HasIndex("Type")
                        .HasDatabaseName("ix_providers_type");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("ix_providers_user_id");

                    b.HasIndex("VerificationStatus")
                        .HasDatabaseName("ix_providers_verification_status");

                    b.ToTable("providers", "providers");
                });

            modelBuilder.Entity("MeAjudaAi.Modules.Providers.Domain.Entities.Provider", b =>
                {
                    b.OwnsOne("MeAjudaAi.Modules.Providers.Domain.ValueObjects.BusinessProfile", "BusinessProfile", b1 =>
                        {
                            b1.Property<Guid>("ProviderId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Description")
                                .HasMaxLength(1000)
                                .HasColumnType("character varying(1000)")
                                .HasColumnName("description");

                            b1.Property<string>("FantasyName")
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)")
                                .HasColumnName("fantasy_name");

                            b1.Property<string>("LegalName")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)")
                                .HasColumnName("legal_name");

                            b1.HasKey("ProviderId");

                            b1.ToTable("providers", "providers");

                            b1.WithOwner()
                                .HasForeignKey("ProviderId");

                            b1.OwnsOne("MeAjudaAi.Modules.Providers.Domain.ValueObjects.Address", "PrimaryAddress", b2 =>
                                {
                                    b2.Property<Guid>("BusinessProfileProviderId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("City")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)")
                                        .HasColumnName("city");

                                    b2.Property<string>("Complement")
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)")
                                        .HasColumnName("complement");

                                    b2.Property<string>("Country")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("country");

                                    b2.Property<string>("Neighborhood")
                                        .IsRequired()
                                        .HasMaxLength(100)
                                        .HasColumnType("character varying(100)")
                                        .HasColumnName("neighborhood");

                                    b2.Property<string>("Number")
                                        .IsRequired()
                                        .HasMaxLength(20)
                                        .HasColumnType("character varying(20)")
                                        .HasColumnName("number");

                                    b2.Property<string>("State")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("character varying(50)")
                                        .HasColumnName("state");

                                    b2.Property<string>("Street")
                                        .IsRequired()
                                        .HasMaxLength(200)
                                        .HasColumnType("character varying(200)")
                                        .HasColumnName("street");

                                    b2.Property<string>("ZipCode")
                                        .IsRequired()
                                        .HasMaxLength(20)
                                        .HasColumnType("character varying(20)")
                                        .HasColumnName("zip_code");

                                    b2.HasKey("BusinessProfileProviderId");

                                    b2.ToTable("providers", "providers");

                                    b2.WithOwner()
                                        .HasForeignKey("BusinessProfileProviderId");
                                });

                            b1.OwnsOne("MeAjudaAi.Modules.Providers.Domain.ValueObjects.ContactInfo", "ContactInfo", b2 =>
                                {
                                    b2.Property<Guid>("BusinessProfileProviderId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Email")
                                        .IsRequired()
                                        .HasMaxLength(255)
                                        .HasColumnType("character varying(255)")
                                        .HasColumnName("email");

                                    b2.Property<string>("PhoneNumber")
                                        .HasMaxLength(20)
                                        .HasColumnType("character varying(20)")
                                        .HasColumnName("phone_number");

                                    b2.Property<string>("Website")
                                        .HasMaxLength(255)
                                        .HasColumnType("character varying(255)")
                                        .HasColumnName("website");

                                    b2.HasKey("BusinessProfileProviderId");

                                    b2.ToTable("providers", "providers");

                                    b2.WithOwner()
                                        .HasForeignKey("BusinessProfileProviderId");
                                });

                            b1.Navigation("ContactInfo")
                                .IsRequired();

                            b1.Navigation("PrimaryAddress")
                                .IsRequired();
                        });

                    b.OwnsMany("MeAjudaAi.Modules.Providers.Domain.ValueObjects.Document", "Documents", b1 =>
                        {
                            b1.Property<Guid>("ProviderId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("DocumentType")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("document_type");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("number");

                            b1.HasKey("ProviderId", "Id");

                            b1.ToTable("Document", "providers");

                            b1.WithOwner()
                                .HasForeignKey("ProviderId");
                        });

                    b.OwnsMany("MeAjudaAi.Modules.Providers.Domain.ValueObjects.Qualification", "Qualifications", b1 =>
                        {
                            b1.Property<Guid>("ProviderId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Description")
                                .HasMaxLength(1000)
                                .HasColumnType("character varying(1000)")
                                .HasColumnName("description");

                            b1.Property<string>("DocumentNumber")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("document_number");

                            b1.Property<DateTime?>("ExpirationDate")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("expiration_date");

                            b1.Property<DateTime?>("IssueDate")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("issue_date");

                            b1.Property<string>("IssuingOrganization")
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)")
                                .HasColumnName("issuing_organization");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)")
                                .HasColumnName("name");

                            b1.HasKey("ProviderId", "Id");

                            b1.ToTable("Qualification", "providers");

                            b1.WithOwner()
                                .HasForeignKey("ProviderId");
                        });

                    b.Navigation("BusinessProfile")
                        .IsRequired();

                    b.Navigation("Documents");

                    b.Navigation("Qualifications");
                });
#pragma warning restore 612, 618
        }
    }
}
