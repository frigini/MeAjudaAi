# RabbitMQ Configuration for Security
# This file configures RabbitMQ to restrict default guest user access
# and enforce secure authentication

# Restrict guest user to localhost only for security
# This prevents remote access with default credentials (guest can only connect from localhost)
loopback_users.guest = true

# Only allow connections from authenticated users
# This ensures no anonymous access is possible
auth_mechanisms.1 = PLAIN
auth_mechanisms.2 = AMQPLAIN

# Enable management plugin with authentication required
management.tcp.port = 15672
# Optional hardening:
# management.listener.ip = 127.0.0.1
# listeners.ssl.default = 5671
# ssl_options.cacertfile = /etc/rabbitmq/certs/ca.pem
# ssl_options.certfile   = /etc/rabbitmq/certs/server.pem
# ssl_options.keyfile    = /etc/rabbitmq/certs/server_key.pem
# ssl_options.verify     = verify_peer
# ssl_options.fail_if_no_peer_cert = true

# Log authentication failures for security monitoring
log.connection.level = info
log.channel.level = info

# Set reasonable connection limits
connection_max = 1000
channel_max = 2047

# Security: Require authentication for all operations
default_vhost = /

# Note: Default user configuration removed to prevent conflicts with environment variables.
# Use RABBITMQ_DEFAULT_USER and RABBITMQ_DEFAULT_PASS environment variables in Docker Compose
# or supply a definitions file to configure users, tags, and permissions.
# This ensures environment variables become the single source of truth for user management. 