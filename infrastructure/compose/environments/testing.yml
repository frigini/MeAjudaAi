# Testing environment for MeAjudaAi
# Lightweight setup for running tests
# Usage: docker compose -f environments/testing.yml up -d
#
# Features:
# - Health checks prevent startup race conditions
# - Optimized PostgreSQL settings for faster tests  
# - Keycloak waits for healthy database before starting
# - Keycloak health endpoint enabled (KC_HEALTH_ENABLED=true)
# - Health checks use management port 9000 for reliability
# - All services expose health status for monitoring
#
# Environment Variables (with defaults):
# Main Test DB: POSTGRES_TEST_DB=meajudaai_test, POSTGRES_TEST_USER=postgres, POSTGRES_TEST_PASSWORD=test123
# Keycloak DB: KEYCLOAK_TEST_DB=keycloak_test, KEYCLOAK_TEST_DB_USER=keycloak, KEYCLOAK_TEST_DB_PASSWORD=keycloak
# Keycloak Admin: KEYCLOAK_TEST_ADMIN=admin, KEYCLOAK_TEST_ADMIN_PASSWORD=admin
# Keycloak Version: KEYCLOAK_VERSION=26.0.2 (pinned for reproducible tests - update only when needed)

---
services:
  # Test database
  postgres-test:
    image: postgres:16
    container_name: meajudaai-postgres-test
    environment:
      POSTGRES_DB: ${POSTGRES_TEST_DB:-meajudaai_test}
      POSTGRES_USER: ${POSTGRES_TEST_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_TEST_PASSWORD:-test123}
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - meajudaai-test-network
    command: ["postgres", "-c", "fsync=off", "-c", "synchronous_commit=off", "-c", "full_page_writes=off"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  # Test Redis
  redis-test:
    image: redis:7-alpine
    container_name: meajudaai-redis-test
    ports:
      - "6380:6379"
    networks:
      - meajudaai-test-network
    command: ["redis-server", "--save", ""]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  # Keycloak for integration tests
  keycloak-test-db:
    image: postgres:16
    container_name: meajudaai-keycloak-db-test
    environment:
      POSTGRES_DB: ${KEYCLOAK_TEST_DB:-keycloak_test}
      POSTGRES_USER: ${KEYCLOAK_TEST_DB_USER:-keycloak}
      POSTGRES_PASSWORD: ${KEYCLOAK_TEST_DB_PASSWORD:-keycloak}
    volumes:
      - keycloak_test_db_data:/var/lib/postgresql/data
    networks:
      - meajudaai-test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20

  keycloak-test:
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION:-26.0.2}
    container_name: meajudaai-keycloak-test
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_TEST_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_TEST_ADMIN_PASSWORD:-admin}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-test-db:5432/${KEYCLOAK_TEST_DB:-keycloak_test}
      KC_DB_USERNAME: ${KEYCLOAK_TEST_DB_USER:-keycloak}
      KC_DB_PASSWORD: ${KEYCLOAK_TEST_DB_PASSWORD:-keycloak}
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
    command: ["start-dev", "--import-realm"]
    ports:
      - "8081:8080"
    volumes:
      - keycloak_test_data:/opt/keycloak/data
      - ../../keycloak/realms:/opt/keycloak/data/import
    depends_on:
      keycloak-test-db:
        condition: service_healthy
    networks:
      - meajudaai-test-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:9000/health/ready 2>/dev/null || curl -fsS http://localhost:9000/health/ready >/dev/null 2>&1 || timeout 1 bash -c '</dev/tcp/localhost/9000' 2>/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 30

volumes:
  postgres_test_data:
    name: meajudaai-postgres-data-test
  keycloak_test_db_data:
    name: meajudaai-keycloak-db-data-test
  keycloak_test_data:
    name: meajudaai-keycloak-data-test

networks:
  meajudaai-test-network:
    name: meajudaai-network-test
    driver: bridge